(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{270:function(t,s,a){"use strict";a.r(s);var n=a(22),e=Object(n.a)({},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"php"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#php","aria-hidden":"true"}},[t._v("#")]),t._v(" PHP")]),t._v(" "),a("h2",{attrs:{id:"php代码解释过程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#php代码解释过程","aria-hidden":"true"}},[t._v("#")]),t._v(" PHP代码解释过程")]),t._v(" "),a("p",[a("code",[t._v("PHP-FPM")]),t._v("进程启动时，会初始化"),a("code",[t._v("Zend")]),t._v("，然后"),a("code",[t._v("Apache/Nginx")]),t._v("在收到请求之后，转发给"),a("code",[t._v("PHP-FPM")]),t._v("进程，它在已经准备好的"),a("code",[t._v("Zend")]),t._v("下解释执行具体的代码：")]),t._v(" "),a("ol",[a("li",[t._v("将PHP代码转换为"),a("code",[t._v("Tokens")]),t._v("语言片段存到一个数组里")]),t._v(" "),a("li",[t._v("分析"),a("code",[t._v("Tokens")]),t._v("，转换成一个一个的简单的表达式")]),t._v(" "),a("li",[t._v("将表达式编译成"),a("code",[t._v("Opcode")])]),t._v(" "),a("li",[t._v("顺次执行"),a("code",[t._v("Opcode")]),t._v("，每次一条，从而实现PHP脚本的功能")])]),t._v(" "),a("p",[t._v("最后，代码执行完后，得到的结果返回给"),a("code",[t._v("Apache/Nginx")]),t._v("响应请求。")]),t._v(" "),a("h2",{attrs:{id:"php-cgi与php-fpm"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#php-cgi与php-fpm","aria-hidden":"true"}},[t._v("#")]),t._v(" PHP-CGI与PHP-FPM")]),t._v(" "),a("blockquote",[a("p",[t._v("CGI是外部应用程序（CGI程序）与Web服务器之间的接口标准")])]),t._v(" "),a("p",[t._v("CGI有个蛋疼的地方，就是每一次收到web请求都会有启动和退出过程")]),t._v(" "),a("p",[t._v("因此诞生了"),a("code",[t._v("FastCGI")]),t._v("，CGI一次启动一个主进程("),a("code",[t._v("master")]),t._v(")，让他只读取一次配置，然后在启动多个工作进程("),a("code",[t._v("worker")]),t._v("),当一个请求来的时候，通过"),a("code",[t._v("master")]),t._v("传递给"),a("code",[t._v("worker")]),t._v("这样就可以避免重复劳动了。")]),t._v(" "),a("p",[t._v("以上只是说明了"),a("code",[t._v("FastCGI")]),t._v("，"),a("code",[t._v("FastCGI")]),t._v(" 是一个与平台无关，与语言无关，任何语言只要按照它的接口来实现，就能实现自己语言的"),a("code",[t._v("FastCGI")]),t._v("能力和web server 通讯。\n接下来才到了PHP自己的"),a("code",[t._v("FastCGI")]),t._v("：")]),t._v(" "),a("p",[a("code",[t._v("PHP-CGI")]),t._v("就是PHP实现的自带的"),a("code",[t._v("FastCGI")]),t._v("管理器，但是它性能太差，主要有以下两个缺点：")]),t._v(" "),a("ol",[a("li",[a("code",[t._v("PHP-CGI")]),t._v("变更"),a("code",[t._v("php.ini")]),t._v("配置后需重启"),a("code",[t._v("PHP-CGI")]),t._v("才能让新的"),a("code",[t._v("php.ini")]),t._v("生效，不可以平滑重启。")]),t._v(" "),a("li",[t._v("当直接杀死"),a("code",[t._v("PHP-CGI")]),t._v("进程时，php就不能运行了。")])]),t._v(" "),a("p",[t._v("然后到2004年，一个叫安德烈的人发明了PHP专用的"),a("code",[t._v("FastCGI")]),t._v("管理器：PHP-FPM，克服了上面2个问题。")]),t._v(" "),a("h2",{attrs:{id:"php7的主要新特性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#php7的主要新特性","aria-hidden":"true"}},[t._v("#")]),t._v(" PHP7的主要新特性")]),t._v(" "),a("blockquote",[a("p",[t._v("标量类型与返回值类型声明")])]),t._v(" "),a("p",[t._v("PHP 7 增加了标量类型声明的特性，标量类型声明有两种模式:")]),t._v(" "),a("ul",[a("li",[t._v("强制模式 (默认)")]),t._v(" "),a("li",[t._v("严格模式")])]),t._v(" "),a("div",{staticClass:"language-php extra-class"},[a("pre",{pre:!0,attrs:{class:"language-php"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("declare")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("strict_types"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n")])])]),a("p",[t._v("代码中通过指定 strict_types的值（1或者0），1表示严格类型校验模式，作用于函数调用和返回语句,类型不同时会报错；0表示弱类型校验模式，即强制模式，会自动转换。")]),t._v(" "),a("blockquote",[a("p",[a("code",[t._v("NULL")]),t._v(" 合并运算符(??)")])]),t._v(" "),a("p",[t._v("PHP 7 新增加的 NULL 合并运算符（??）是用于执行isset()检测的三元运算的快捷方式。")]),t._v(" "),a("p",[t._v("NULL 合并运算符会判断变量是否存在且值不为NULL，如果是，它就会返回自身的值，否则返回它的第二个操作数。")]),t._v(" "),a("p",[t._v("以前我们这样写三元运算符：")]),t._v(" "),a("div",{staticClass:"language-php extra-class"},[a("pre",{pre:!0,attrs:{class:"language-php"}},[a("code",[a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$username")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("isset")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$_GET")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token single-quoted-string string"}},[t._v("'user]) ? $_GET['")]),t._v("user"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token single-quoted-string string"}},[t._v("'nobody'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("现在可以直接这样写：")]),t._v(" "),a("div",{staticClass:"language-php extra-class"},[a("pre",{pre:!0,attrs:{class:"language-php"}},[a("code",[a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$username")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$_GET")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token single-quoted-string string"}},[t._v("'user'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token single-quoted-string string"}},[t._v("'nobody'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("blockquote",[a("p",[t._v("太空船运算符（组合比较符）")])]),t._v(" "),a("p",[t._v("PHP 7 新增加的太空船运算符（组合比较符）用于比较两个表达式 "),a("code",[t._v("$a")]),t._v(" 和 "),a("code",[t._v("$b")]),t._v("，如果 "),a("code",[t._v("$a")]),t._v(" 小于、等于或大于 "),a("code",[t._v("$b")]),t._v("时，它分别返回-1、0或1。")]),t._v(" "),a("div",{staticClass:"language-php extra-class"},[a("pre",{pre:!0,attrs:{class:"language-php"}},[a("code",[a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$c")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$a")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$b")]),t._v("\n")])])]),a("p",[t._v("如果"),a("code",[t._v("$a")]),t._v(" > "),a("code",[t._v("$b")]),t._v(", "),a("code",[t._v("$c")]),t._v(" 的值为1")]),t._v(" "),a("p",[t._v("如果"),a("code",[t._v("$a")]),t._v(" == "),a("code",[t._v("$b")]),t._v(", "),a("code",[t._v("$c")]),t._v(" 的值为0")]),t._v(" "),a("p",[t._v("如果"),a("code",[t._v("$a")]),t._v(" < "),a("code",[t._v("$b")]),t._v(", "),a("code",[t._v("$c")]),t._v(" 的值为-1")]),t._v(" "),a("blockquote",[a("p",[t._v("define常量数组")])]),t._v(" "),a("p",[t._v("在 "),a("code",[t._v("PHP 5.6")]),t._v(" 中仅能通过 "),a("code",[t._v("const")]),t._v(" 定义常量数组，PHP 7 可以通过 define() 来定义。")]),t._v(" "),a("div",{staticClass:"language-php extra-class"},[a("pre",{pre:!0,attrs:{class:"language-php"}},[a("code",[a("span",{pre:!0,attrs:{class:"token php language-php"}},[a("span",{pre:!0,attrs:{class:"token delimiter important"}},[t._v("<?php")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 使用 define 函数来定义数组")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("define")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token single-quoted-string string"}},[t._v("'animal'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token single-quoted-string string"}},[t._v("'dog'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token single-quoted-string string"}},[t._v("'cat'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token single-quoted-string string"}},[t._v("'fish'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("echo")]),t._v(" animal"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token delimiter important"}},[t._v("?>")])]),t._v("\n")])])]),a("blockquote",[a("p",[t._v("匿名类")])]),t._v(" "),a("p",[t._v('PHP 7 支持通过 new class 来实例化一个匿名类，这可以用来替代一些"用后即焚"的完整类定义。')]),t._v(" "),a("blockquote",[a("p",[t._v("命名空间引用优化")])]),t._v(" "),a("div",{staticClass:"language-php extra-class"},[a("pre",{pre:!0,attrs:{class:"language-php"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// PHP7以前语法的写法 ")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("use")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token package"}},[t._v("FooLibrary"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("Bar"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("Baz"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("ClassA")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("use")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token package"}},[t._v("FooLibrary"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("Bar"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("Baz"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("ClassB")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// PHP7新语法写法 ")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("use")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token package"}},[t._v("FooLibrary"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("Bar"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("Baz"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" ClassA"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" ClassB"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("blockquote",[a("p",[t._v("某些处理机制更改")])]),t._v(" "),a("blockquote",[a("p",[t._v("相比PHP5性能大幅提升")])]),t._v(" "),a("h2",{attrs:{id:"静态变量"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#静态变量","aria-hidden":"true"}},[t._v("#")]),t._v(" 静态变量")]),t._v(" "),a("p",[t._v("static关键字 静态变量常驻内存 只会被第一次调用时初始化 函数调用完成后静态变量不被重置")]),t._v(" "),a("h2",{attrs:{id:"php中self与-this的区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#php中self与-this的区别","aria-hidden":"true"}},[t._v("#")]),t._v(" PHP中self与$this的区别")]),t._v(" "),a("p",[t._v("self调用的是实例化前的类本身")]),t._v(" "),a("p",[t._v("$this调用的则是实例化的对象")]),t._v(" "),a("h2",{attrs:{id:"php常用函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#php常用函数","aria-hidden":"true"}},[t._v("#")]),t._v(" PHP常用函数")]),t._v(" "),a("blockquote",[a("p",[t._v("字符串函数")])]),t._v(" "),a("div",{staticClass:"language-php extra-class"},[a("pre",{pre:!0,attrs:{class:"language-php"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("explode")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token single-quoted-string string"}},[t._v("'-'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$str")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//根据‘-’来拆分字符串，返回一个数组")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("implode")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token single-quoted-string string"}},[t._v("'-'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$arr")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//将数组以‘-’为间隔连成字符串")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("strlen")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$str")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("       "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//返回字符串长度 ")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("mb_strlen")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$str")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//可以返回中文字符长度；")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("mb_substr")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$str")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//截取字符串，起始位置，长度")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("ucwords")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$str")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//每一个单词的首字母转大写")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("ucfirst")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$str")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//首字母转大写")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("trim")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$str")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("         "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//删除字符串前后（左右）空格")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("strrev")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$str")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("       "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//倒转字符串 abcd->dcba")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("str_split")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$str")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//按长度分割字符串返回数组，长度可选，默认为1")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("str_replace")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token single-quoted-string string"}},[t._v("'a'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token single-quoted-string string"}},[t._v("'b'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$str")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//以b替换$str中的a")]),t._v("\n")])])]),a("blockquote",[a("p",[t._v("数组函数")])]),t._v(" "),a("div",{staticClass:"language-php extra-class"},[a("pre",{pre:!0,attrs:{class:"language-php"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("count")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$arr")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//返回数组个数")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("array_unique")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$arr")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//数组去重")]),t._v("\n")])])])])},[],!1,null,null,null);s.default=e.exports}}]);